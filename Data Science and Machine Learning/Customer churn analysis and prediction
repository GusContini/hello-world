{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Customer Churn Prediction.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "machine_shape": "hm"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "#**Customer Churn Prediction**"
      ],
      "metadata": {
        "id": "pWVgfjUEAOZS"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Technological advance has deeply changed the way customers and companies interact.\n",
        "\n",
        "Currently, it is possible to predict the possible churn rate of a customer and, thus, define better business strategies.\n",
        "\n",
        "Churn is a metric that indicates the percentage of customers who canceled a given service in a given period of time. It has become very popular in the last few years among all sorts of companies, specilly those with recurrent income, and is considered one of the most important OKR in many of them.\n",
        "\n",
        "This notebook takes a dataset previously used on a Kaggle competition (available at https://www.kaggle.com/santoshd3/bank-customers) and conducts a full analysis to understand and predict customer churn for a bank that operates in western europe. Five models will be tested: Logistic Regression, Support Vector Machines, Multi-layer Perceptron, Random Forest and eXtreme Gradient Boosting. All models will have its hyperparameters optimized with scikit-optimize package. Also, a full set of metrics will be evaluated in other to ckeck how good these models are to predict churn. "
      ],
      "metadata": {
        "id": "a-j-5rI6AWRY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Set up"
      ],
      "metadata": {
        "id": "AhfxN7l0AX08"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# install package to optimize the models \n",
        "!pip install scikit-optimize shap"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8avVzETcByyP",
        "outputId": "fd0233f6-28e0-421f-fca5-0df42b902119"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: scikit-optimize in /usr/local/lib/python3.7/dist-packages (0.9.0)\n",
            "Requirement already satisfied: shap in /usr/local/lib/python3.7/dist-packages (0.40.0)\n",
            "Requirement already satisfied: pyaml>=16.9 in /usr/local/lib/python3.7/dist-packages (from scikit-optimize) (21.10.1)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-optimize) (1.1.0)\n",
            "Requirement already satisfied: scikit-learn>=0.20.0 in /usr/local/lib/python3.7/dist-packages (from scikit-optimize) (1.0.2)\n",
            "Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.7/dist-packages (from scikit-optimize) (1.19.5)\n",
            "Requirement already satisfied: scipy>=0.19.1 in /usr/local/lib/python3.7/dist-packages (from scikit-optimize) (1.4.1)\n",
            "Requirement already satisfied: PyYAML in /usr/local/lib/python3.7/dist-packages (from pyaml>=16.9->scikit-optimize) (3.13)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.20.0->scikit-optimize) (3.0.0)\n",
            "Requirement already satisfied: numba in /usr/local/lib/python3.7/dist-packages (from shap) (0.51.2)\n",
            "Requirement already satisfied: cloudpickle in /usr/local/lib/python3.7/dist-packages (from shap) (1.3.0)\n",
            "Requirement already satisfied: tqdm>4.25.0 in /usr/local/lib/python3.7/dist-packages (from shap) (4.62.3)\n",
            "Requirement already satisfied: slicer==0.0.7 in /usr/local/lib/python3.7/dist-packages (from shap) (0.0.7)\n",
            "Requirement already satisfied: packaging>20.9 in /usr/local/lib/python3.7/dist-packages (from shap) (21.3)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from shap) (1.1.5)\n",
            "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>20.9->shap) (3.0.6)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from numba->shap) (57.4.0)\n",
            "Requirement already satisfied: llvmlite<0.35,>=0.34.0.dev0 in /usr/local/lib/python3.7/dist-packages (from numba->shap) (0.34.0)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas->shap) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas->shap) (2018.9)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas->shap) (1.15.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Turn off warnings \n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')\n",
        "\n",
        "# libs for data handling\n",
        "import pandas as pd \n",
        "import numpy as np \n",
        "import time\n",
        "\n",
        "# libs for data visualization\n",
        "import matplotlib.pyplot as plt  \n",
        "import seaborn as sns \n",
        "\n",
        "%matplotlib inline"
      ],
      "metadata": {
        "id": "Dr15BiL4_0O5"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 223
        },
        "id": "dEoVm7uz_l7P",
        "outputId": "cdce834a-a15f-402b-c9ce-58138307e1f5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "dataset shape: (10000, 14)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-85867cff-7e70-414a-9fa4-4ee94c1dc9db\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>RowNumber</th>\n",
              "      <th>CustomerId</th>\n",
              "      <th>Surname</th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Geography</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>NumOfProducts</th>\n",
              "      <th>HasCrCard</th>\n",
              "      <th>IsActiveMember</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Exited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>15634602</td>\n",
              "      <td>Hargrave</td>\n",
              "      <td>619</td>\n",
              "      <td>France</td>\n",
              "      <td>Female</td>\n",
              "      <td>42</td>\n",
              "      <td>2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>101348.88</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>15647311</td>\n",
              "      <td>Hill</td>\n",
              "      <td>608</td>\n",
              "      <td>Spain</td>\n",
              "      <td>Female</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>83807.86</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>112542.58</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>15619304</td>\n",
              "      <td>Onio</td>\n",
              "      <td>502</td>\n",
              "      <td>France</td>\n",
              "      <td>Female</td>\n",
              "      <td>42</td>\n",
              "      <td>8</td>\n",
              "      <td>159660.80</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>113931.57</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>15701354</td>\n",
              "      <td>Boni</td>\n",
              "      <td>699</td>\n",
              "      <td>France</td>\n",
              "      <td>Female</td>\n",
              "      <td>39</td>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>93826.63</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>15737888</td>\n",
              "      <td>Mitchell</td>\n",
              "      <td>850</td>\n",
              "      <td>Spain</td>\n",
              "      <td>Female</td>\n",
              "      <td>43</td>\n",
              "      <td>2</td>\n",
              "      <td>125510.82</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>79084.10</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-85867cff-7e70-414a-9fa4-4ee94c1dc9db')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-85867cff-7e70-414a-9fa4-4ee94c1dc9db button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-85867cff-7e70-414a-9fa4-4ee94c1dc9db');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   RowNumber  CustomerId   Surname  ...  IsActiveMember EstimatedSalary Exited\n",
              "0          1    15634602  Hargrave  ...               1       101348.88      1\n",
              "1          2    15647311      Hill  ...               1       112542.58      0\n",
              "2          3    15619304      Onio  ...               0       113931.57      1\n",
              "3          4    15701354      Boni  ...               0        93826.63      0\n",
              "4          5    15737888  Mitchell  ...               1        79084.10      0\n",
              "\n",
              "[5 rows x 14 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ],
      "source": [
        "# load dataset\n",
        "URL = 'https://drive.google.com/file/d/11-vwvXc8ioDuentKHGZ8dM02pYyRUF97/view?usp=sharing'\n",
        "path = 'https://drive.google.com/uc?export=download&id='+URL.split('/')[-2]\n",
        "dataset = pd.read_csv(path)\n",
        "#\n",
        "print('dataset shape:', dataset.shape)\n",
        "dataset.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## EDA - Exploratory Data Analysis"
      ],
      "metadata": {
        "id": "1BmJvYVwCCqd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# check for duplicate rows\n",
        "sum(dataset.duplicated())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iN6cv496CRpQ",
        "outputId": "5bffb1ef-b248-4390-ad8e-868609c4626f"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# gets number unique values\n",
        "for var in dataset.columns:\n",
        "  print('{} has {} unique values, its type is {} and it has {} NaNs'.format(var, dataset[var].nunique(), dataset[var].dtype, dataset[var].isna().sum()))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OQI6LBFnD6Xg",
        "outputId": "e2fcac28-a6cf-4661-908d-060c39caeaf9"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "RowNumber has 10000 unique values, its type is int64 and it has 0 NaNs\n",
            "CustomerId has 10000 unique values, its type is int64 and it has 0 NaNs\n",
            "Surname has 2932 unique values, its type is object and it has 0 NaNs\n",
            "CreditScore has 460 unique values, its type is int64 and it has 0 NaNs\n",
            "Geography has 3 unique values, its type is object and it has 0 NaNs\n",
            "Gender has 2 unique values, its type is object and it has 0 NaNs\n",
            "Age has 70 unique values, its type is int64 and it has 0 NaNs\n",
            "Tenure has 11 unique values, its type is int64 and it has 0 NaNs\n",
            "Balance has 6382 unique values, its type is float64 and it has 0 NaNs\n",
            "NumOfProducts has 4 unique values, its type is int64 and it has 0 NaNs\n",
            "HasCrCard has 2 unique values, its type is int64 and it has 0 NaNs\n",
            "IsActiveMember has 2 unique values, its type is int64 and it has 0 NaNs\n",
            "EstimatedSalary has 9999 unique values, its type is float64 and it has 0 NaNs\n",
            "Exited has 2 unique values, its type is int64 and it has 0 NaNs\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# descriptive statistics about the dataset\n",
        "dataset.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "z81oM3jvCqYQ",
        "outputId": "569baa4b-24bc-412a-8ab2-fe570e8060d9"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-7c2cf4ac-3a2a-435d-8a51-3c4777a50674\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>RowNumber</th>\n",
              "      <th>CustomerId</th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>NumOfProducts</th>\n",
              "      <th>HasCrCard</th>\n",
              "      <th>IsActiveMember</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Exited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>10000.00000</td>\n",
              "      <td>1.000000e+04</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.00000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>5000.50000</td>\n",
              "      <td>1.569094e+07</td>\n",
              "      <td>650.528800</td>\n",
              "      <td>38.921800</td>\n",
              "      <td>5.012800</td>\n",
              "      <td>76485.889288</td>\n",
              "      <td>1.530200</td>\n",
              "      <td>0.70550</td>\n",
              "      <td>0.515100</td>\n",
              "      <td>100090.239881</td>\n",
              "      <td>0.203700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2886.89568</td>\n",
              "      <td>7.193619e+04</td>\n",
              "      <td>96.653299</td>\n",
              "      <td>10.487806</td>\n",
              "      <td>2.892174</td>\n",
              "      <td>62397.405202</td>\n",
              "      <td>0.581654</td>\n",
              "      <td>0.45584</td>\n",
              "      <td>0.499797</td>\n",
              "      <td>57510.492818</td>\n",
              "      <td>0.402769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.556570e+07</td>\n",
              "      <td>350.000000</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>11.580000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2500.75000</td>\n",
              "      <td>1.562853e+07</td>\n",
              "      <td>584.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>51002.110000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>5000.50000</td>\n",
              "      <td>1.569074e+07</td>\n",
              "      <td>652.000000</td>\n",
              "      <td>37.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>97198.540000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>100193.915000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>7500.25000</td>\n",
              "      <td>1.575323e+07</td>\n",
              "      <td>718.000000</td>\n",
              "      <td>44.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>127644.240000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>149388.247500</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>10000.00000</td>\n",
              "      <td>1.581569e+07</td>\n",
              "      <td>850.000000</td>\n",
              "      <td>92.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>250898.090000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>199992.480000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7c2cf4ac-3a2a-435d-8a51-3c4777a50674')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7c2cf4ac-3a2a-435d-8a51-3c4777a50674 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7c2cf4ac-3a2a-435d-8a51-3c4777a50674');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "         RowNumber    CustomerId  ...  EstimatedSalary        Exited\n",
              "count  10000.00000  1.000000e+04  ...     10000.000000  10000.000000\n",
              "mean    5000.50000  1.569094e+07  ...    100090.239881      0.203700\n",
              "std     2886.89568  7.193619e+04  ...     57510.492818      0.402769\n",
              "min        1.00000  1.556570e+07  ...        11.580000      0.000000\n",
              "25%     2500.75000  1.562853e+07  ...     51002.110000      0.000000\n",
              "50%     5000.50000  1.569074e+07  ...    100193.915000      0.000000\n",
              "75%     7500.25000  1.575323e+07  ...    149388.247500      0.000000\n",
              "max    10000.00000  1.581569e+07  ...    199992.480000      1.000000\n",
              "\n",
              "[8 rows x 11 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "So far we can see that this dataset is consistent and \"ready to go\". We have 10.000 entries and 14 columns, including the target variable. There are no missing values, nor duplicate rows.\n",
        "From this point we can already tell that 'RowNumber' (as the variable name suggests) is duplicated with the dataset's index. 'CustomerId' is an identificator for customers and, by the number of unique values, also acts as an index. 'Surname' doesn't hold any meaning for our scope of analysis. So let's drop these two variables.\n",
        "\n",
        "The .describe() method also provides us some initital insights about the variables, such as:\n",
        "\n",
        "*   From 'Tenure' we can tell that the average time a customer stays within the client base is around 5 years. It's reasonable to figure this variable should have an important role in the task at hand.\n",
        "*   From 'Exited' (target) we can tell that the churn rate in the dataset is around 20%. Which also tells us that our data is unbalanced.\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "YIp8rY1PDpa9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop unnecessary variables\n",
        "drop = ['RowNumber', 'CustomerId', 'Surname']\n",
        "dataset_orig = dataset.copy(deep=True)\n",
        "dataset.drop(drop, axis=1, inplace=True)\n",
        "print(dataset.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TC_R56MrDKyR",
        "outputId": "30255df7-c3bf-4d90-87f8-629b08947799"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(10000, 11)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Target balance check\n",
        "dataset['Exited'].value_counts().plot(kind = 'pie', title='Exited')\n",
        "print(dataset['Exited'].value_counts(normalize=True))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 316
        },
        "id": "I_fI0Vn7JAk9",
        "outputId": "03bd74af-540e-4c0c-8100-d20e1b898f23"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0    0.7963\n",
            "1    0.2037\n",
            "Name: Exited, dtype: float64\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Define lists of categorical and numerical features \n",
        "cat_features = [var for var in dataset.columns if dataset[var].dtype == 'object']\n",
        "print('there are {} categorical variables'.format(len(cat_features)))\n",
        "print(cat_features)\n",
        "#\n",
        "num_features = [var for var in dataset.columns if dataset[var].dtype in ('int64', 'float64')]\n",
        "print('there are {} numerical variables'.format(len(num_features)))\n",
        "print(num_features)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YKql-SqKLPRd",
        "outputId": "42bf7ca8-325f-4175-f225-2dcbe88e4acb"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "there are 2 categorical variables\n",
            "['Geography', 'Gender']\n",
            "there are 9 numerical variables\n",
            "['CreditScore', 'Age', 'Tenure', 'Balance', 'NumOfProducts', 'HasCrCard', 'IsActiveMember', 'EstimatedSalary', 'Exited']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Categorical Features"
      ],
      "metadata": {
        "id": "I6Z786HSTteS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# distribution plots for categorical features\n",
        "fig, axs = plt.subplots(1, 2, figsize=(12,4))\n",
        "for i, var in enumerate(cat_features):\n",
        "  sns.countplot(x=var, data=dataset, ax=axs[i])\n",
        "  print(dataset[var].value_counts(normalize=True))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 401
        },
        "id": "DC1q0aVHMQi8",
        "outputId": "114c00e0-580e-4d7a-9a19-e78e6c354a73"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "France     0.5014\n",
            "Germany    0.2509\n",
            "Spain      0.2477\n",
            "Name: Geography, dtype: float64\n",
            "Male      0.5457\n",
            "Female    0.4543\n",
            "Name: Gender, dtype: float64\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# distribution plots for categorical features grouped by the target\n",
        "fig, axs = plt.subplots(1, 2, figsize=(12,4))\n",
        "for i, var in enumerate(cat_features):\n",
        "  sns.countplot(x=var, data=dataset, ax=axs[i], hue='Exited')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "rJQP7MkiRg5K",
        "outputId": "9581aeb6-2cbc-4165-c25b-bbe1be447619"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Half of the customers are from France. The other half is equally divided between Spain and Germany. Gender shows a slight predominance of males. When we group by 'exited', it's clear that the proportions of clients who have churned are different: churn rate in germany is the highest among countries. As for gender, female's churn rate are higher than for males."
      ],
      "metadata": {
        "id": "Vc9kWPguOARY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Numerical Features"
      ],
      "metadata": {
        "id": "4n7LFbBpTvxp"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# distribution plots for numerical features\n",
        "fig, axs = plt.subplots(2, 4, figsize=(16,5))\n",
        "for i in range(int(len(num_features)/2)):\n",
        "  sns.boxplot(x='Exited', y=num_features[i], data=dataset, ax=axs[0, i])\n",
        "  #axs[0, i].set_title(num_features[i])\n",
        "  sns.boxplot(x='Exited', y=num_features[i+4], data=dataset, ax=axs[1, i])\n",
        "  #axs[1, i].set_title(num_features[i+4])\n",
        "fig.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 369
        },
        "id": "iUBYKKcGVnOE",
        "outputId": "4dffc6ff-7ea0-4ef4-cad9-ce8781008df0"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x360 with 8 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Plots above show us that there are outliers on 'CreditScore' and 'Age' ('NumOfProducts' = 4 doesn't seem to be an outlier). We can also notice that distributions are different for churned cliest for the variables 'Age', 'Tenure' and 'Balance'."
      ],
      "metadata": {
        "id": "RM957xYLZBx2"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Numerical Encoding for Categorical Features"
      ],
      "metadata": {
        "id": "WUUfl1S2b-ZO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataset['GenderInt'] = pd.factorize(dataset['Gender'])[0]\n",
        "num_features.append('GenderInt')\n",
        "dataset['GeographyInt'] = pd.factorize(dataset['Geography'])[0]\n",
        "num_features.append('GeographyInt')"
      ],
      "metadata": {
        "id": "LkTYUrVScMQu"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Correlation Analysis"
      ],
      "metadata": {
        "id": "7YO-mJ2Gc_It"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# correlation heatmap function\n",
        "def corr_heatmap(df, method):\n",
        "  df_corr = df.iloc[:,3:].corr(method=method)\n",
        "  mask = np.triu(np.ones_like(df_corr, dtype=np.bool))\n",
        "  fig, ax = plt.subplots(figsize = (10, 10))\n",
        "  sns.heatmap(df_corr, annot=True, vmin=-1, vmax=1, cmap='viridis', linewidths=.5, mask=mask, ax=ax)\n",
        "  plt.show()"
      ],
      "metadata": {
        "id": "MN9YeFCWekri"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Pearson Correlation analysis\n",
        "corr_heatmap(dataset, 'pearson')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 667
        },
        "id": "CUaUUrhZe4vb",
        "outputId": "37418022-8b02-4d1b-e18f-6af0d0667079"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x720 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Pearson Correlation analysis\n",
        "corr_heatmap(dataset, 'spearman')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 667
        },
        "id": "T9UW7fzSe-MT",
        "outputId": "9a4f7bc1-5a4b-4829-b49e-591054922c64"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x720 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "No variables are too highly correlated to be considered a problem. The variables with greater correlation to the target are 'Age', 'IsActiveMember', 'NumOfProducts' and 'Balance'."
      ],
      "metadata": {
        "id": "kXS-d1wzhX5h"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Dataset preprocessing"
      ],
      "metadata": {
        "id": "qlSt4HQTiN09"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Separtes X for explanatory feaures and y for target\n",
        "X = dataset[num_features+['Exited']]\n",
        "y = X.pop('Exited')\n",
        "print(X.shape)\n",
        "print(y.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ULeG_L4HfPoj",
        "outputId": "d367df89-d41e-4a6e-c468-800fa9016590"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(10000, 10)\n",
            "(10000,)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Data Split"
      ],
      "metadata": {
        "id": "529N_SXHFSNl"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Now for modeling purposes, before applying any transformation to the data, it's of **capital importance to isolate some data for validation**, otherwise we would incur in leakage."
      ],
      "metadata": {
        "id": "eqUWuvjAqhhO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# splits data into train and validation\n",
        "from sklearn.model_selection import train_test_split\n",
        "X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.25, random_state=16, stratify=y)\n",
        "print(X_train.shape)\n",
        "print(X_valid.shape)\n",
        "print(y_train.shape)\n",
        "print(y_valid.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "acI_Xq1Wq8fa",
        "outputId": "20a12b2f-04ec-4547-d9bf-1bed2901f14b"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(7500, 10)\n",
            "(2500, 10)\n",
            "(7500,)\n",
            "(2500,)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Outlier treatment"
      ],
      "metadata": {
        "id": "TTnyEz9snaBA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# functions to detect (according to IQR criteria) and replace outliers\n",
        "\n",
        "def outlier_detection(feature, df, low, up):\n",
        "  q1 = df[feature].quantile(low)\n",
        "  q3 = df[feature].quantile(up)\n",
        "  iqr = q3-q1\n",
        "  uf = q3 + 1.5*iqr\n",
        "  lf = q1 - 1.5*iqr\n",
        "  return(uf, lf)\n",
        "\n",
        "def outlier_replacement(feature, uf, lf):\n",
        "  if feature > uf:\n",
        "    clean = uf\n",
        "  elif feature < lf:\n",
        "    clean = lf\n",
        "  else:\n",
        "    clean = feature\n",
        "  return clean"
      ],
      "metadata": {
        "id": "RESCEE-8ivuO"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 'CreditScore' outlier treatment\n",
        "\n",
        "uf, lf = outlier_detection('CreditScore', X_train, 0.25, 0.75)\n",
        "print(uf, lf)\n",
        "clean = np.vectorize(outlier_replacement)(X_train['CreditScore'], uf, lf)\n",
        "print(len(clean),'=' , X_train.shape[0])\n",
        "X_train['CreditScore_clean'] = clean\n",
        "clean = np.vectorize(outlier_replacement)(X_valid['CreditScore'], uf, lf)\n",
        "print(len(clean),'=' , X_valid.shape[0])\n",
        "X_valid['CreditScore_clean'] = clean\n",
        "\n",
        "fig, axs = plt.subplots(2, 2, figsize=(10,8))\n",
        "sns.violinplot(x='CreditScore', data=X_train, ax=axs[0, 0])\n",
        "axs[0, 0].set_title('X_train CreditScore original distribution')\n",
        "sns.violinplot(x='CreditScore_clean', data=X_train, ax=axs[0, 1])\n",
        "axs[0, 1].set_title('X_train CreditScore clean distribution')\n",
        "#\n",
        "sns.violinplot(x='CreditScore', data=X_valid, ax=axs[1, 0])\n",
        "axs[1, 0].set_title('X_valid CreditScore original distribution')\n",
        "sns.violinplot(x='CreditScore_clean', data=X_valid, ax=axs[1, 1])\n",
        "axs[1, 1].set_title('X_valid CreditScore clean distribution')\n",
        "#\n",
        "fig.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 637
        },
        "id": "bgaigsJ0j2ri",
        "outputId": "c55bd92e-50db-4c7c-b59d-4a133ce02dc6"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "919.625 382.625\n",
            "7500 = 7500\n",
            "2500 = 2500\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x576 with 4 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 'Age' outlier treatment\n",
        "\n",
        "uf, lf = outlier_detection('Age', X_train, 0.25, 0.75)\n",
        "print(uf, lf)\n",
        "clean = np.vectorize(outlier_replacement)(X_train['Age'], uf, lf)\n",
        "print(len(clean),'=' , X_train.shape[0])\n",
        "X_train['Age_clean'] = clean\n",
        "clean = np.vectorize(outlier_replacement)(X_valid['Age'], uf, lf)\n",
        "print(len(clean),'=' , X_valid.shape[0])\n",
        "X_valid['Age_clean'] = clean\n",
        "\n",
        "fig, axs = plt.subplots(2, 2, figsize=(10,8))\n",
        "sns.violinplot(x='Age', data=X_train, ax=axs[0, 0])\n",
        "axs[0, 0].set_title('X_train Age original distribution')\n",
        "sns.violinplot(x='Age_clean', data=X_train, ax=axs[0, 1])\n",
        "axs[0, 1].set_title('X_train Age clean distribution')\n",
        "#\n",
        "sns.violinplot(x='Age', data=X_valid, ax=axs[1, 0])\n",
        "axs[1, 0].set_title('X_valid Age original distribution')\n",
        "sns.violinplot(x='Age_clean', data=X_valid, ax=axs[1, 1])\n",
        "axs[1, 1].set_title('X_valid Age clean distribution')\n",
        "#\n",
        "fig.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 637
        },
        "id": "oMQdjCIql6DS",
        "outputId": "dbce0f93-50cf-4ba1-e4ea-24758857a289"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "62.0 14.0\n",
            "7500 = 7500\n",
            "2500 = 2500\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x576 with 4 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# replace variables by their clean versions (i.e. without outliers) \n",
        "num_features.remove('CreditScore')\n",
        "num_features.append('CreditScore_clean')\n",
        "#\n",
        "num_features.remove('Age')\n",
        "num_features.append('Age_clean')"
      ],
      "metadata": {
        "id": "X59WWUZSniyQ"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train = X_train[num_features]\n",
        "print(X_train.shape)\n",
        "X_valid = X_valid[num_features]\n",
        "print(X_valid.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Df845kP9m5OQ",
        "outputId": "6e10c2eb-4246-4157-c1a3-4c44f495dba6"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(7500, 10)\n",
            "(2500, 10)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Scaling"
      ],
      "metadata": {
        "id": "QuyNVJ0joKUz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Scaling\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "scaler = StandardScaler()\n",
        "\n",
        "vars_scale = ['Tenure', 'Balance', 'NumOfProducts', 'EstimatedSalary', 'CreditScore_clean', 'Age_clean']\n",
        "\n",
        "X_train_scaled = pd.DataFrame(scaler.fit_transform(X_train[vars_scale]), columns=X_train[vars_scale].columns)\n",
        "X_train_scaled.set_index(X_train.index, inplace=True)\n",
        "print(X_train_scaled.shape)\n",
        "X_valid_scaled = pd.DataFrame(scaler.transform(X_valid[vars_scale]), columns=X_valid[vars_scale].columns)\n",
        "X_valid_scaled.set_index(X_valid.index, inplace=True)\n",
        "print(X_valid_scaled.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yC0rlvG3oMhg",
        "outputId": "4920fae4-fc20-4a6c-a463-86494c32e5a1"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(7500, 6)\n",
            "(2500, 6)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train_final = pd.concat([X_train[['HasCrCard', 'IsActiveMember', 'GenderInt', 'GeographyInt']], X_train_scaled], axis=1)\n",
        "print(X_train_final.shape)\n",
        "X_train_final.head(2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 130
        },
        "id": "hK0qsqO7qL1H",
        "outputId": "45d4a926-3373-45f0-c8a7-db55605f5473"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(7500, 10)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-aea45848-f967-401e-a5be-381a9975540e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>HasCrCard</th>\n",
              "      <th>IsActiveMember</th>\n",
              "      <th>GenderInt</th>\n",
              "      <th>GeographyInt</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>NumOfProducts</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>CreditScore_clean</th>\n",
              "      <th>Age_clean</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3178</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-0.351906</td>\n",
              "      <td>0.533429</td>\n",
              "      <td>0.796859</td>\n",
              "      <td>-1.028122</td>\n",
              "      <td>-1.128228</td>\n",
              "      <td>0.031594</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6782</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1.727916</td>\n",
              "      <td>0.476888</td>\n",
              "      <td>2.511271</td>\n",
              "      <td>0.391893</td>\n",
              "      <td>-0.683496</td>\n",
              "      <td>1.675682</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aea45848-f967-401e-a5be-381a9975540e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-aea45848-f967-401e-a5be-381a9975540e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-aea45848-f967-401e-a5be-381a9975540e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "      HasCrCard  IsActiveMember  ...  CreditScore_clean  Age_clean\n",
              "3178          1               1  ...          -1.128228   0.031594\n",
              "6782          1               1  ...          -0.683496   1.675682\n",
              "\n",
              "[2 rows x 10 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_valid_final = pd.concat([X_valid[['HasCrCard', 'IsActiveMember', 'GenderInt', 'GeographyInt']], X_valid_scaled], axis=1)\n",
        "print(X_valid_final.shape)\n",
        "X_valid_final.head(2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 130
        },
        "id": "pKl9DtXwv5BB",
        "outputId": "41beda1e-364a-443e-9c2e-0d47495d9cfd"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(2500, 10)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-2e14f926-22d4-4970-82f1-76ee68737cb0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>HasCrCard</th>\n",
              "      <th>IsActiveMember</th>\n",
              "      <th>GenderInt</th>\n",
              "      <th>GeographyInt</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>NumOfProducts</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>CreditScore_clean</th>\n",
              "      <th>Age_clean</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>6939</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.381279</td>\n",
              "      <td>-1.225762</td>\n",
              "      <td>0.796859</td>\n",
              "      <td>-1.547013</td>\n",
              "      <td>-0.838635</td>\n",
              "      <td>0.442616</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5532</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1.381279</td>\n",
              "      <td>-1.225762</td>\n",
              "      <td>0.796859</td>\n",
              "      <td>0.739464</td>\n",
              "      <td>0.712756</td>\n",
              "      <td>-0.584939</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e14f926-22d4-4970-82f1-76ee68737cb0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2e14f926-22d4-4970-82f1-76ee68737cb0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2e14f926-22d4-4970-82f1-76ee68737cb0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "      HasCrCard  IsActiveMember  ...  CreditScore_clean  Age_clean\n",
              "6939          0               1  ...          -0.838635   0.442616\n",
              "5532          1               1  ...           0.712756  -0.584939\n",
              "\n",
              "[2 rows x 10 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Churn Prediction - unbalanced data"
      ],
      "metadata": {
        "id": "lqMo6oUctVaV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# package to optimize the models \n",
        "\n",
        "from skopt import BayesSearchCV"
      ],
      "metadata": {
        "id": "E2em_90cwpcW"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Logistic Regression"
      ],
      "metadata": {
        "id": "FluVvFBrOqiC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LogisticRegression\n",
        "\n",
        "opt = BayesSearchCV(\n",
        "    LogisticRegression(),\n",
        "    {\n",
        "        'penalty': ['l2'],\n",
        "        'C': (1e-1, 1e1, 'log-uniform'),\n",
        "        'tol': (1e-6, 1e-3, 'log-uniform'),\n",
        "        'solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_final, y_train)\n",
        "\n",
        "print(\"test score: %s\" % opt.best_score_)\n",
        "print(\"valid score: %s\" % opt.score(X_valid_final, y_valid))\n",
        "print(\"best params: %s\" % str(opt.best_params_))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Frya_pyXIQWg",
        "outputId": "3cb9e7f3-6307-45ab-dbe7-c60f62f8e80a"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "test score: 0.8212\n",
            "valid score: 0.8152\n",
            "best params: OrderedDict([('C', 0.12684403231358854), ('penalty', 'l2'), ('solver', 'lbfgs'), ('tol', 3.6493383854102656e-05)])\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report\n",
        "\n",
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4IwV96X9LNM9",
        "outputId": "df5df95a-1e4c-415f-b7ff-cf9ecdd05252"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.83      0.96      0.89      1991\n",
            "           1       0.61      0.25      0.35       509\n",
            "\n",
            "    accuracy                           0.82      2500\n",
            "   macro avg       0.72      0.60      0.62      2500\n",
            "weighted avg       0.79      0.82      0.78      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "sNeaXQ6_NoBy",
        "outputId": "be46f8a6-cad9-41fa-ba74-1d4d6123d3f4"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7d50d1890>"
            ]
          },
          "metadata": {},
          "execution_count": 32
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "reglog = opt.best_estimator_"
      ],
      "metadata": {
        "id": "Zv-NhBwKWAQx"
      },
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### SVM"
      ],
      "metadata": {
        "id": "o_9CGuMDOu0c"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.svm import SVC\n",
        "\n",
        "opt = BayesSearchCV(\n",
        "    SVC(),\n",
        "    {\n",
        "        'C': (1e-1, 1e1, 'log-uniform'),\n",
        "        'kernel': ['linear', 'poly', 'rbf', 'sigmoid'],\n",
        "        'degree': (1, 3),\n",
        "        'tol': (1e-5, 1e-3, 'log-uniform'),\n",
        "        #'gamma': ['scale', 'auto']\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_final, y_train)\n",
        "\n",
        "print(\"val. score: %s\" % opt.best_score_)\n",
        "print(\"test score: %s\" % opt.score(X_valid_final, y_valid))\n",
        "print(\"best params: %s\" % str(opt.best_params_))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AE5AAw2NKCMP",
        "outputId": "1db8c4f3-2281-44db-c47d-c76d226eac6b"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "val. score: 0.8628\n",
            "test score: 0.8468\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report\n",
        "\n",
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ODYs9SKbPcUR",
        "outputId": "531d60e8-c1fe-44f6-801a-737e650defd7"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.86      0.96      0.91      1991\n",
            "           1       0.72      0.40      0.51       509\n",
            "\n",
            "    accuracy                           0.85      2500\n",
            "   macro avg       0.79      0.68      0.71      2500\n",
            "weighted avg       0.83      0.85      0.83      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "kL_dyYSTPiMr",
        "outputId": "26b782cf-0f29-422b-d078-2f3fa3020f7d"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7e15175d0>"
            ]
          },
          "metadata": {},
          "execution_count": 37
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "svm = opt.best_estimator_"
      ],
      "metadata": {
        "id": "8lnZHBoBWExu"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### MLP"
      ],
      "metadata": {
        "id": "NP8M4MNEPnae"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.neural_network import MLPClassifier\n",
        "\n",
        "opt = BayesSearchCV(\n",
        "    MLPClassifier(),\n",
        "    {\n",
        "        'activation': ['identity', 'logistic', 'tanh', 'relu'],\n",
        "        'solver': ['lbfgs', 'sgd', 'adam'],\n",
        "        'alpha': (1e-4, 1e-2, 'log-uniform'),\n",
        "        #'gamma': ['scale', 'auto'],\n",
        "        'learning_rate': ['constant', 'invscaling', 'adaptive'],\n",
        "        #'tol': (1e-6, 1e-3, 'log-uniform'),\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_final, y_train)\n",
        "\n",
        "print(\"val. score: %s\" % opt.best_score_)\n",
        "print(\"test score: %s\" % opt.score(X_valid_final, y_valid))\n",
        "print(\"best params: %s\" % str(opt.best_params_))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "F6BWqB97PqAC",
        "outputId": "c8c551fa-3ba9-4ae4-d4fb-e39c52323f02"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "val. score: 0.8628\n",
            "test score: 0.852\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report\n",
        "\n",
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u_ZVDcxNQ2eJ",
        "outputId": "1e976a36-05d2-4dc2-9172-8c1c163462cd"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.87      0.95      0.91      1991\n",
            "           1       0.72      0.45      0.55       509\n",
            "\n",
            "    accuracy                           0.85      2500\n",
            "   macro avg       0.79      0.70      0.73      2500\n",
            "weighted avg       0.84      0.85      0.84      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "EesS0CU5Q2al",
        "outputId": "7636b73d-063e-45a9-d616-4e81587364dd"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7dedecbd0>"
            ]
          },
          "metadata": {},
          "execution_count": 42
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mlp = opt.best_estimator_"
      ],
      "metadata": {
        "id": "AdpC992TWG2-"
      },
      "execution_count": 44,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Random Forest"
      ],
      "metadata": {
        "id": "DTQXToKCQ9F5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.ensemble import RandomForestClassifier\n",
        "\n",
        "opt = BayesSearchCV(\n",
        "    RandomForestClassifier(),\n",
        "    {\n",
        "        'n_estimators': [200, 400, 800, 1000, 1500, 2000],\n",
        "        #'criterion': ['gini', 'entropy'],\n",
        "        'min_samples_split': (2, 7),\n",
        "        #'min_samples_leaf': (1, 7),\n",
        "        'max_features': ['auto', 'sqrt', 'log2'],\n",
        "        'bootstrap': [True, False]\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_final, y_train)\n",
        "\n",
        "print(\"val. score: %s\" % opt.best_score_)\n",
        "print(\"test score: %s\" % opt.score(X_valid_final, y_valid))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5IOeYGO4Sa2G",
        "outputId": "72714fdc-ffaa-4664-a9a9-40e97e319b1c"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "val. score: 0.8682666666666666\n",
            "test score: 0.8556\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report\n",
        "\n",
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A8gYjykSSbaL",
        "outputId": "99c48e6c-46b3-491f-a269-6fff6df5c3f2"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.87      0.96      0.91      1991\n",
            "           1       0.75      0.43      0.55       509\n",
            "\n",
            "    accuracy                           0.86      2500\n",
            "   macro avg       0.81      0.70      0.73      2500\n",
            "weighted avg       0.85      0.86      0.84      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "SogMwOfJSbVi",
        "outputId": "d6f9cfc9-f6ac-406f-fa89-66e2d7deb5ad"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7d52046d0>"
            ]
          },
          "metadata": {},
          "execution_count": 47
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rf = opt.best_estimator_"
      ],
      "metadata": {
        "id": "fQz2Y080WIH7"
      },
      "execution_count": 49,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### XGBoost"
      ],
      "metadata": {
        "id": "-79cyCpCSgfS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from xgboost import XGBClassifier\n",
        "\n",
        "opt = BayesSearchCV(\n",
        "    XGBClassifier(),\n",
        "    {\n",
        "        'learning_rate': (1e-5, 1e-1, 'log-uniform'),\n",
        "        'min_split_loss': [0.05, 0.1, 0.3, 0.5, 0.75, 1],\n",
        "        'max_depth': (3, 15),\n",
        "        #'min_child_weight': (3, 7),\n",
        "        'subsample': (1e-2, 0.9999, 'log-uniform'),\n",
        "        #'colsample_bytree': (1e-2, 1, 'log-uniform'),\n",
        "        #'reg_lambda': (1e-2, 1, 'log-uniform'),\n",
        "        #reg_alpha': (1e-2, 1, 'log-uniform'),\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_final, y_train)\n",
        "\n",
        "print(\"val. score: %s\" % opt.best_score_)\n",
        "print(\"test score: %s\" % opt.score(X_valid_final, y_valid))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1toFBz3hTRcr",
        "outputId": "11a6ebb1-503d-42cd-8ff4-127434b05b4b"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "val. score: 0.868\n",
            "test score: 0.8564\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report\n",
        "\n",
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pM_vCmKlVSyp",
        "outputId": "ed40ee5a-6648-455b-9202-61e92ac79d2a"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.87      0.96      0.91      1991\n",
            "           1       0.75      0.44      0.56       509\n",
            "\n",
            "    accuracy                           0.86      2500\n",
            "   macro avg       0.81      0.70      0.74      2500\n",
            "weighted avg       0.85      0.86      0.84      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "APRrCOvXVT9s",
        "outputId": "785a05f6-26bd-4d68-a89e-e8888c26fdf6"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7d5006750>"
            ]
          },
          "metadata": {},
          "execution_count": 59
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "xgb = opt.best_estimator_"
      ],
      "metadata": {
        "id": "0LH2XGUVWJ6I"
      },
      "execution_count": 61,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### AUC"
      ],
      "metadata": {
        "id": "lBNtQcl2JHSN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots()\n",
        "plot_roc_curve(reglog, X_valid_final, y_valid, ax=ax)\n",
        "plot_roc_curve(svm, X_valid_final, y_valid, ax=ax)\n",
        "plot_roc_curve(mlp, X_valid_final, y_valid, ax=ax)\n",
        "plot_roc_curve(rf, X_valid_final, y_valid, ax=ax)\n",
        "plot_roc_curve(xgb, X_valid_final, y_valid, ax=ax)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "Zfajly85Ijum",
        "outputId": "a08bc0a5-8386-4b08-dbc9-7cdaa5427e8a"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.roc_curve.RocCurveDisplay at 0x7fb7ca109710>"
            ]
          },
          "metadata": {},
          "execution_count": 65
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "So far XGBoost presented the best results."
      ],
      "metadata": {
        "id": "VOQ7zRIYfH47"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Churn Prediction - balanced data"
      ],
      "metadata": {
        "id": "NvBbnyQYOHKB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(X_train_final.shape)\n",
        "print(y_train.shape)\n",
        "print(X_valid_final.shape)\n",
        "print(y_valid.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X4-jhLlNQ-MM",
        "outputId": "0e8b3cec-340b-4a61-aff3-2ba19d866d29"
      },
      "execution_count": 77,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(7500, 10)\n",
            "(7500,)\n",
            "(2500, 10)\n",
            "(2500,)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(y_train.value_counts())\n",
        "print(y_train.value_counts(normalize=True))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "j5t6udM_PP7g",
        "outputId": "f77ce366-0c56-4b04-f8cc-c4ad372b7008"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0    5972\n",
            "1    1528\n",
            "Name: Exited, dtype: int64\n",
            "0    0.796267\n",
            "1    0.203733\n",
            "Name: Exited, dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Oversampling\n",
        "Let's apply SMOTE for oversampling the minority class"
      ],
      "metadata": {
        "id": "cKc8eGOcOOER"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from imblearn.over_sampling import SMOTE\n",
        "oversample = SMOTE()\n",
        "X_train_balanced, y_train_balanced = oversample.fit_resample(X_train_final, y_train)\n",
        "\n",
        "print(X_train_balanced.shape)\n",
        "print(y_train_balanced.shape)\n",
        "\n",
        "print(y_train_balanced.value_counts())\n",
        "print(y_train_balanced.value_counts(normalize=True))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2Z5gOrm-R4_6",
        "outputId": "c12303b5-155a-4980-8f16-dfb09f7692e1"
      },
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(11944, 10)\n",
            "(11944,)\n",
            "1    5972\n",
            "0    5972\n",
            "Name: Exited, dtype: int64\n",
            "1    0.5\n",
            "0    0.5\n",
            "Name: Exited, dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Logistic Regression"
      ],
      "metadata": {
        "id": "Wc7MLJvdOHKK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%%time\n",
        "opt = BayesSearchCV(\n",
        "    LogisticRegression(),\n",
        "    {\n",
        "        'penalty': ['l2'],\n",
        "        'C': (1e-1, 1e1, 'log-uniform'),\n",
        "        'tol': (1e-6, 1e-3, 'log-uniform'),\n",
        "        'solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_balanced, y_train_balanced)\n",
        "\n",
        "print(\"test score: %s\" % opt.best_score_)\n",
        "print(\"valid score: %s\" % opt.score(X_valid_final, y_valid))\n",
        "print(\"best params: %s\" % str(opt.best_params_))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0712bffa-ebe2-4fc1-ee61-44016c26aa25",
        "id": "Bblzy_WVOHKK"
      },
      "execution_count": 85,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "test score: 0.7287357708196471\n",
            "valid score: 0.7084\n",
            "best params: OrderedDict([('C', 1.063752639828356), ('penalty', 'l2'), ('solver', 'sag'), ('tol', 0.000822325913023678)])\n",
            "CPU times: user 48.8 s, sys: 1min 8s, total: 1min 57s\n",
            "Wall time: 40.5 s\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "15382744-adba-4ce5-a392-8513a89ceb3a",
        "id": "vEfLVs8ZOHKK"
      },
      "execution_count": 86,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.89      0.73      0.80      1991\n",
            "           1       0.37      0.64      0.47       509\n",
            "\n",
            "    accuracy                           0.71      2500\n",
            "   macro avg       0.63      0.68      0.64      2500\n",
            "weighted avg       0.78      0.71      0.73      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "a120edc2-ad2b-46e3-ac3f-a4e4860e24fa",
        "id": "bqN_pLiUOHKK"
      },
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7c54bca90>"
            ]
          },
          "metadata": {},
          "execution_count": 87
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "reglog = opt.best_estimator_"
      ],
      "metadata": {
        "id": "4OS2qXRzOHKL"
      },
      "execution_count": 88,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### SVM"
      ],
      "metadata": {
        "id": "gkxuWbHIOHKL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%%time\n",
        "opt = BayesSearchCV(\n",
        "    SVC(),\n",
        "    {\n",
        "        'C': (1e-1, 1e1, 'log-uniform'),\n",
        "        'kernel': ['linear', 'poly', 'rbf', 'sigmoid'],\n",
        "        'degree': (1, 3),\n",
        "        'tol': (1e-5, 1e-3, 'log-uniform'),\n",
        "        #'gamma': ['scale', 'auto']\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_balanced, y_train_balanced)\n",
        "\n",
        "print(\"val. score: %s\" % opt.best_score_)\n",
        "print(\"test score: %s\" % opt.score(X_valid_final, y_valid))\n",
        "print(\"best params: %s\" % str(opt.best_params_))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "feeed724-4632-483f-c114-cd6268ce81d9",
        "id": "cAIJCD79OHKM"
      },
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "val. score: 0.8354832995654523\n",
            "test score: 0.7904\n",
            "best params: OrderedDict([('C', 10.0), ('degree', 1), ('kernel', 'rbf'), ('tol', 1.1324038043370131e-05)])\n",
            "CPU times: user 6min 37s, sys: 56.8 s, total: 7min 34s\n",
            "Wall time: 6min 30s\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report\n",
        "\n",
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "04a49334-b3db-4006-8466-c96be8473a7b",
        "id": "0nBJxt_sOHKM"
      },
      "execution_count": 105,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.90      0.83      0.86      1991\n",
            "           1       0.49      0.63      0.55       509\n",
            "\n",
            "    accuracy                           0.79      2500\n",
            "   macro avg       0.69      0.73      0.71      2500\n",
            "weighted avg       0.81      0.79      0.80      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "2bf147b6-376f-400e-941c-99940fe4c02a",
        "id": "ZleYUVsPOHKM"
      },
      "execution_count": 106,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7d35dfdd0>"
            ]
          },
          "metadata": {},
          "execution_count": 106
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "svm = opt.best_estimator_"
      ],
      "metadata": {
        "id": "B7XkjdLvOHKN"
      },
      "execution_count": 107,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### MLP"
      ],
      "metadata": {
        "id": "XL4nBuWGOHKN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%%time\n",
        "opt = BayesSearchCV(\n",
        "    MLPClassifier(),\n",
        "    {\n",
        "        'activation': ['identity', 'logistic', 'tanh', 'relu'],\n",
        "        'solver': ['lbfgs', 'sgd', 'adam'],\n",
        "        'alpha': (1e-4, 1e-2, 'log-uniform'),\n",
        "        #'gamma': ['scale', 'auto'],\n",
        "        'learning_rate': ['constant', 'invscaling', 'adaptive'],\n",
        "        #'tol': (1e-6, 1e-3, 'log-uniform'),\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_balanced, y_train_balanced)\n",
        "\n",
        "print(\"val. score: %s\" % opt.best_score_)\n",
        "print(\"test score: %s\" % opt.score(X_valid_final, y_valid))\n",
        "print(\"best params: %s\" % str(opt.best_params_))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f1816d94-cccb-4cad-af00-bffab3cb8573",
        "id": "2aIeRnGhOHKN"
      },
      "execution_count": 89,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "val. score: 0.8446097533516919\n",
            "test score: 0.7864\n",
            "best params: OrderedDict([('activation', 'tanh'), ('alpha', 0.0001), ('learning_rate', 'invscaling'), ('solver', 'lbfgs')])\n",
            "CPU times: user 22min 44s, sys: 39min 38s, total: 1h 2min 23s\n",
            "Wall time: 16min 3s\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report\n",
        "\n",
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5be5d030-c96b-4ec8-b759-fb17d45c9b9c",
        "id": "yXrpHjy4OHKN"
      },
      "execution_count": 90,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.89      0.83      0.86      1991\n",
            "           1       0.48      0.61      0.54       509\n",
            "\n",
            "    accuracy                           0.79      2500\n",
            "   macro avg       0.69      0.72      0.70      2500\n",
            "weighted avg       0.81      0.79      0.80      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "1c917c81-0af8-46cc-f062-73ad0c301540",
        "id": "3-j4VIn3OHKN"
      },
      "execution_count": 91,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7c53b5190>"
            ]
          },
          "metadata": {},
          "execution_count": 91
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mlp = opt.best_estimator_"
      ],
      "metadata": {
        "id": "Bms41AvKOHKO"
      },
      "execution_count": 92,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Random Forest"
      ],
      "metadata": {
        "id": "eeEgv2wpOHKO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%%time\n",
        "opt = BayesSearchCV(\n",
        "    RandomForestClassifier(),\n",
        "    {\n",
        "        'n_estimators': [200, 400, 800, 1000, 1500, 2000],\n",
        "        #'criterion': ['gini', 'entropy'],\n",
        "        'min_samples_split': (2, 7),\n",
        "        #'min_samples_leaf': (1, 7),\n",
        "        'max_features': ['auto', 'sqrt', 'log2'],\n",
        "        'bootstrap': [True, False]\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_balanced, y_train_balanced)\n",
        "\n",
        "print(\"val. score: %s\" % opt.best_score_)\n",
        "print(\"test score: %s\" % opt.score(X_valid_final, y_valid))\n",
        "print(\"best params: %s\" % str(opt.best_params_))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "290960bd-e3d2-4fce-d1ae-d2a9fc575c0d",
        "id": "Lf4P5QpNOHKO"
      },
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "val. score: 0.896854820147921\n",
            "test score: 0.834\n",
            "best params: OrderedDict([('bootstrap', False), ('max_features', 'auto'), ('min_samples_split', 2), ('n_estimators', 2000)])\n",
            "CPU times: user 33min 6s, sys: 53.9 s, total: 33min 59s\n",
            "Wall time: 32min 58s\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report\n",
        "\n",
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "58e4eeb9-aeb5-4b87-f539-14e12fa6a47d",
        "id": "tmjxzShtOHKO"
      },
      "execution_count": 95,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.89      0.91      0.90      1991\n",
            "           1       0.60      0.54      0.57       509\n",
            "\n",
            "    accuracy                           0.83      2500\n",
            "   macro avg       0.74      0.73      0.73      2500\n",
            "weighted avg       0.83      0.83      0.83      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "outputId": "812351c0-2526-4c83-a33b-570b4553cd94",
        "id": "XAcYzjmWOHKO"
      },
      "execution_count": 96,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7c52d8350>"
            ]
          },
          "metadata": {},
          "execution_count": 96
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rf = opt.best_estimator_"
      ],
      "metadata": {
        "id": "0JQc0855OHKO"
      },
      "execution_count": 97,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### XGBoost"
      ],
      "metadata": {
        "id": "W9JB-WmrOHKO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%%time\n",
        "opt = BayesSearchCV(\n",
        "    XGBClassifier(),\n",
        "    {\n",
        "        'learning_rate': (1e-5, 1e-1, 'log-uniform'),\n",
        "        'min_split_loss': [0.05, 0.1, 0.3, 0.5, 0.75, 1],\n",
        "        'max_depth': (3, 15),\n",
        "        #'min_child_weight': (3, 7),\n",
        "        'subsample': (1e-2, 0.9999, 'log-uniform'),\n",
        "        #'colsample_bytree': (1e-2, 1, 'log-uniform'),\n",
        "        #'reg_lambda': (1e-2, 1, 'log-uniform'),\n",
        "        #reg_alpha': (1e-2, 1, 'log-uniform'),\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_balanced, y_train_balanced)\n",
        "\n",
        "print(\"val. score: %s\" % opt.best_score_)\n",
        "print(\"test score: %s\" % opt.score(X_valid_final, y_valid))\n",
        "print(\"best params: %s\" % str(opt.best_params_))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7b8b1127-0cd8-48d8-a355-5fab7f505457",
        "id": "uYwuh98WOHKP"
      },
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "val. score: 0.8772692598565772\n",
            "test score: 0.8488\n",
            "best params: OrderedDict([('learning_rate', 0.1), ('max_depth', 9), ('min_split_loss', 1.0), ('subsample', 0.9999)])\n",
            "CPU times: user 2min 56s, sys: 59.6 s, total: 3min 55s\n",
            "Wall time: 2min 48s\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report\n",
        "\n",
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d288d0a2-9623-47c8-955d-e9ce6bf8d4fb",
        "id": "9IPEA3QpOHKP"
      },
      "execution_count": 99,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.89      0.93      0.91      1991\n",
            "           1       0.65      0.55      0.60       509\n",
            "\n",
            "    accuracy                           0.85      2500\n",
            "   macro avg       0.77      0.74      0.75      2500\n",
            "weighted avg       0.84      0.85      0.84      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "3281c0d0-ad40-4913-94c3-ef0af44c8aaf",
        "id": "ExNtH2jgOHKP"
      },
      "execution_count": 100,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7c52e3f90>"
            ]
          },
          "metadata": {},
          "execution_count": 100
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "xgb = opt.best_estimator_"
      ],
      "metadata": {
        "id": "OmwJgCbtOHKQ"
      },
      "execution_count": 101,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### AUC"
      ],
      "metadata": {
        "id": "6Zu4O9uFOHKQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots()\n",
        "plot_roc_curve(reglog, X_valid_final, y_valid, ax=ax)\n",
        "plot_roc_curve(svm, X_valid_final, y_valid, ax=ax)\n",
        "plot_roc_curve(mlp, X_valid_final, y_valid, ax=ax)\n",
        "plot_roc_curve(rf, X_valid_final, y_valid, ax=ax)\n",
        "plot_roc_curve(xgb, X_valid_final, y_valid, ax=ax)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "cf7ae533-9d42-4109-e417-9c824866b4e3",
        "id": "kuWRvdyvOHKQ"
      },
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.roc_curve.RocCurveDisplay at 0x7fb7c4ef4b90>"
            ]
          },
          "metadata": {},
          "execution_count": 108
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Oversampling didn't produce better results, excepted by a slight improvement on SVM. Now let's try undersampling."
      ],
      "metadata": {
        "id": "Ic35FP_uy63v"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Undersampling the majority class"
      ],
      "metadata": {
        "id": "u1ayicLFzHUR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from imblearn.under_sampling import RandomUnderSampler\n",
        "undersample = RandomUnderSampler()\n",
        "X_train_balanced, y_train_balanced = undersample.fit_resample(X_train_final, y_train)\n",
        "\n",
        "print(X_train_balanced.shape)\n",
        "print(y_train_balanced.shape)\n",
        "\n",
        "print(y_train_balanced.value_counts())\n",
        "print(y_train_balanced.value_counts(normalize=True))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5PDf_txnzIz3",
        "outputId": "21384190-bef2-4d09-ed20-0ee67ab6bcef"
      },
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(3056, 10)\n",
            "(3056,)\n",
            "1    1528\n",
            "0    1528\n",
            "Name: Exited, dtype: int64\n",
            "1    0.5\n",
            "0    0.5\n",
            "Name: Exited, dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Logistic Regression"
      ],
      "metadata": {
        "id": "O1EHDnd5z6i9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%%time\n",
        "opt = BayesSearchCV(\n",
        "    LogisticRegression(),\n",
        "    {\n",
        "        'penalty': ['l2'],\n",
        "        'C': (1e-1, 1e1, 'log-uniform'),\n",
        "        'tol': (1e-6, 1e-3, 'log-uniform'),\n",
        "        'solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_balanced, y_train_balanced)\n",
        "\n",
        "print(\"test score: %s\" % opt.best_score_)\n",
        "print(\"valid score: %s\" % opt.score(X_valid_final, y_valid))\n",
        "print(\"best params: %s\" % str(opt.best_params_))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2b252943-bcfa-43a1-a29e-a6cb6f73984f",
        "id": "oFxDaTP0z6i9"
      },
      "execution_count": 117,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "test score: 0.6989520653105084\n",
            "valid score: 0.7128\n",
            "best params: OrderedDict([('C', 0.1), ('penalty', 'l2'), ('solver', 'liblinear'), ('tol', 0.001)])\n",
            "CPU times: user 44.9 s, sys: 1min 1s, total: 1min 46s\n",
            "Wall time: 37.1 s\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7a081d9d-dd13-460d-ee68-6a3b545164b6",
        "id": "GvAw64p5z6i-"
      },
      "execution_count": 118,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.90      0.72      0.80      1991\n",
            "           1       0.38      0.67      0.49       509\n",
            "\n",
            "    accuracy                           0.71      2500\n",
            "   macro avg       0.64      0.70      0.64      2500\n",
            "weighted avg       0.79      0.71      0.74      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "359eb96d-9183-4acd-83fe-2f106176e1fe",
        "id": "DWuClqjXz6i-"
      },
      "execution_count": 119,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7ded9acd0>"
            ]
          },
          "metadata": {},
          "execution_count": 119
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "reglog = opt.best_estimator_"
      ],
      "metadata": {
        "id": "WxC_VIJkz6i-"
      },
      "execution_count": 120,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### SVM"
      ],
      "metadata": {
        "id": "DxD31BdT0FrX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%%time\n",
        "opt = BayesSearchCV(\n",
        "    SVC(),\n",
        "    {\n",
        "        'C': (1e-1, 1e1, 'log-uniform'),\n",
        "        'kernel': ['linear', 'poly', 'rbf', 'sigmoid'],\n",
        "        'degree': (1, 3),\n",
        "        'tol': (1e-5, 1e-3, 'log-uniform'),\n",
        "        #'gamma': ['scale', 'auto']\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_balanced, y_train_balanced)\n",
        "\n",
        "print(\"val. score: %s\" % opt.best_score_)\n",
        "print(\"test score: %s\" % opt.score(X_valid_final, y_valid))\n",
        "print(\"best params: %s\" % str(opt.best_params_))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a3d63c8c-2b8d-4b4d-91a9-7b6c835fdc3b",
        "id": "y2ja88u40FrX"
      },
      "execution_count": 121,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "val. score: 0.769633994060461\n",
            "test score: 0.7732\n",
            "best params: OrderedDict([('C', 0.13962312160174345), ('degree', 2), ('kernel', 'rbf'), ('tol', 0.0009875272756850555)])\n",
            "CPU times: user 1min 14s, sys: 1min, total: 2min 14s\n",
            "Wall time: 1min 6s\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report\n",
        "\n",
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cb53f364-9eaa-4995-f7dd-b102d7ab5c7b",
        "id": "225tkO980FrX"
      },
      "execution_count": 122,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.92      0.78      0.85      1991\n",
            "           1       0.46      0.73      0.57       509\n",
            "\n",
            "    accuracy                           0.77      2500\n",
            "   macro avg       0.69      0.76      0.71      2500\n",
            "weighted avg       0.83      0.77      0.79      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "2e7b23fe-fff3-4242-97de-0a6ec4f0b907",
        "id": "nmMDbMyN0FrX"
      },
      "execution_count": 123,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7c53b5c50>"
            ]
          },
          "metadata": {},
          "execution_count": 123
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "svm = opt.best_estimator_"
      ],
      "metadata": {
        "id": "wPtQV9zK0FrY"
      },
      "execution_count": 124,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### MLP"
      ],
      "metadata": {
        "id": "B2frvTGw0Qcq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%%time\n",
        "opt = BayesSearchCV(\n",
        "    MLPClassifier(),\n",
        "    {\n",
        "        'activation': ['identity', 'logistic', 'tanh', 'relu'],\n",
        "        'solver': ['lbfgs', 'sgd', 'adam'],\n",
        "        'alpha': (1e-4, 1e-2, 'log-uniform'),\n",
        "        #'gamma': ['scale', 'auto'],\n",
        "        'learning_rate': ['constant', 'invscaling', 'adaptive'],\n",
        "        #'tol': (1e-6, 1e-3, 'log-uniform'),\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_balanced, y_train_balanced)\n",
        "\n",
        "print(\"val. score: %s\" % opt.best_score_)\n",
        "print(\"test score: %s\" % opt.score(X_valid_final, y_valid))\n",
        "print(\"best params: %s\" % str(opt.best_params_))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b8c411c2-a5de-494d-c68b-c080b3843830",
        "id": "h_MzfeOR0Qcq"
      },
      "execution_count": 125,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "val. score: 0.7699598268137863\n",
            "test score: 0.7724\n",
            "best params: OrderedDict([('activation', 'tanh'), ('alpha', 0.00950290400561848), ('learning_rate', 'invscaling'), ('solver', 'adam')])\n",
            "CPU times: user 6min 58s, sys: 12min 47s, total: 19min 46s\n",
            "Wall time: 5min 18s\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report\n",
        "\n",
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "28977a01-df0b-4616-a502-7c5eb4a03b6f",
        "id": "OTDYxbix0Qcr"
      },
      "execution_count": 126,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.92      0.78      0.84      1991\n",
            "           1       0.46      0.75      0.57       509\n",
            "\n",
            "    accuracy                           0.77      2500\n",
            "   macro avg       0.69      0.76      0.71      2500\n",
            "weighted avg       0.83      0.77      0.79      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "e22f956b-a1cb-42c4-b862-416f75b72586",
        "id": "KNV1QQli0Qcr"
      },
      "execution_count": 127,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7c4e2f650>"
            ]
          },
          "metadata": {},
          "execution_count": 127
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mlp = opt.best_estimator_"
      ],
      "metadata": {
        "id": "xlpzMlLp0Qcr"
      },
      "execution_count": 128,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Random Forest"
      ],
      "metadata": {
        "id": "aSv8GgGf0W5r"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%%time\n",
        "opt = BayesSearchCV(\n",
        "    RandomForestClassifier(),\n",
        "    {\n",
        "        'n_estimators': [200, 400, 800, 1000, 1500, 2000],\n",
        "        #'criterion': ['gini', 'entropy'],\n",
        "        'min_samples_split': (2, 7),\n",
        "        #'min_samples_leaf': (1, 7),\n",
        "        'max_features': ['auto', 'sqrt', 'log2'],\n",
        "        'bootstrap': [True, False]\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_balanced, y_train_balanced)\n",
        "\n",
        "print(\"val. score: %s\" % opt.best_score_)\n",
        "print(\"test score: %s\" % opt.score(X_valid_final, y_valid))\n",
        "print(\"best params: %s\" % str(opt.best_params_))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5879144a-d755-4999-ee7a-fa04c47904bf",
        "id": "-AuZ7HB50W5s"
      },
      "execution_count": 129,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "val. score: 0.7693065546367542\n",
            "test score: 0.7944\n",
            "best params: OrderedDict([('bootstrap', True), ('max_features', 'sqrt'), ('min_samples_split', 7), ('n_estimators', 2000)])\n",
            "CPU times: user 7min 16s, sys: 49.9 s, total: 8min 6s\n",
            "Wall time: 7min 11s\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report\n",
        "\n",
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b9a89d9e-fee2-460a-e414-008b9377e670",
        "id": "Pcpocc5G0W5s"
      },
      "execution_count": 130,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.92      0.82      0.86      1991\n",
            "           1       0.50      0.71      0.58       509\n",
            "\n",
            "    accuracy                           0.79      2500\n",
            "   macro avg       0.71      0.76      0.72      2500\n",
            "weighted avg       0.83      0.79      0.81      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        },
        "outputId": "bef731af-703e-4a5c-ed24-afb1a22def35",
        "id": "Nz0E0C5J0W5s"
      },
      "execution_count": 131,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7c4ca2610>"
            ]
          },
          "metadata": {},
          "execution_count": 131
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rf = opt.best_estimator_"
      ],
      "metadata": {
        "id": "u9oyhRan0W5t"
      },
      "execution_count": 132,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### XGBoost"
      ],
      "metadata": {
        "id": "HNX-ud0d0eQi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%%time\n",
        "opt = BayesSearchCV(\n",
        "    XGBClassifier(),\n",
        "    {\n",
        "        'learning_rate': (1e-5, 1e-1, 'log-uniform'),\n",
        "        'min_split_loss': [0.05, 0.1, 0.3, 0.5, 0.75, 1],\n",
        "        'max_depth': (3, 15),\n",
        "        #'min_child_weight': (3, 7),\n",
        "        'subsample': (1e-2, 0.9999, 'log-uniform'),\n",
        "        #'colsample_bytree': (1e-2, 1, 'log-uniform'),\n",
        "        #'reg_lambda': (1e-2, 1, 'log-uniform'),\n",
        "        #reg_alpha': (1e-2, 1, 'log-uniform'),\n",
        "    },\n",
        "    n_iter=32,\n",
        "    cv=3\n",
        ")\n",
        "\n",
        "opt.fit(X_train_balanced, y_train_balanced)\n",
        "\n",
        "print(\"val. score: %s\" % opt.best_score_)\n",
        "print(\"test score: %s\" % opt.score(X_valid_final, y_valid))\n",
        "print(\"best params: %s\" % str(opt.best_params_))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4e05a42f-5313-40eb-c613-4117e936e148",
        "id": "7J2QXGmy0eQi"
      },
      "execution_count": 133,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "val. score: 0.7719247846901022\n",
            "test score: 0.7884\n",
            "best params: OrderedDict([('learning_rate', 1e-05), ('max_depth', 15), ('min_split_loss', 0.05), ('subsample', 0.42070708194456785)])\n",
            "CPU times: user 1min 16s, sys: 1min 1s, total: 2min 17s\n",
            "Wall time: 1min 9s\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report\n",
        "\n",
        "y_pred = opt.best_estimator_.predict(X_valid_final)\n",
        "\n",
        "print(classification_report(y_valid, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ca24c4e7-4bd1-4100-9d09-19f0408a043f",
        "id": "agN6kPWt0eQj"
      },
      "execution_count": 134,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.92      0.81      0.86      1991\n",
            "           1       0.49      0.71      0.58       509\n",
            "\n",
            "    accuracy                           0.79      2500\n",
            "   macro avg       0.70      0.76      0.72      2500\n",
            "weighted avg       0.83      0.79      0.80      2500\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "plot_confusion_matrix(opt.best_estimator_, X_valid_final, y_valid)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "outputId": "bad79d3a-a10a-4d2d-a250-4fee63bfa7b7",
        "id": "LwC9DEwe0eQj"
      },
      "execution_count": 135,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fb7c551f5d0>"
            ]
          },
          "metadata": {},
          "execution_count": 135
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "xgb = opt.best_estimator_"
      ],
      "metadata": {
        "id": "D1UpBIJN0eQj"
      },
      "execution_count": 136,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### AUC"
      ],
      "metadata": {
        "id": "HGE4GiSU0mRV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots()\n",
        "plot_roc_curve(reglog, X_valid_final, y_valid, ax=ax)\n",
        "plot_roc_curve(svm, X_valid_final, y_valid, ax=ax)\n",
        "plot_roc_curve(mlp, X_valid_final, y_valid, ax=ax)\n",
        "plot_roc_curve(rf, X_valid_final, y_valid, ax=ax)\n",
        "plot_roc_curve(xgb, X_valid_final, y_valid, ax=ax)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "2274e663-970e-4398-e22d-1d73ba33bf2c",
        "id": "0Wi9woiI0mRV"
      },
      "execution_count": 137,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.roc_curve.RocCurveDisplay at 0x7fb7c4a0e950>"
            ]
          },
          "metadata": {},
          "execution_count": 137
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Undersampling didn't improve results either. At best, they are very similar to the ones we got without adopting any sampling strategy. Again, SVM showed a small improvement."
      ],
      "metadata": {
        "id": "X_lxk0pC5sUj"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Final coments\n",
        "\n",
        "Results show that XGBoost, a tree based method, presented the best results.\n",
        "The final selection of the best model is not a task that can be generalized (or shouldn't). It depends on several factors, like what kind of error your application wants to minimize (impacting on which metrics we should focus on), feature importance, model interpretation etc. This last factor is gaining importance nowadays. In my experience, I've seen big credit companies choosing a simpler model with worse performance because it was simplier, or more intuitive. The final seleciton definetly should be done with a joint effort of data and domains knowledge specialists.\n",
        "\n",
        "Generally speaking, AUC of 0.84 is already a satisfactory result, but again, it depends on the application needs and scope. Also, there are a few more steps we could do in order to check if we could improve performance, like feature selection, feature engineering and a mixed strategy of over and under sampling, for example."
      ],
      "metadata": {
        "id": "eSnBy1E107ct"
      }
    }
  ]
}
